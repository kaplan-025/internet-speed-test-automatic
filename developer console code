async function testAllInitialServers() {
  try {
    // 1. Sunucu seçme bölümünü aç
    const openServerButton = document.querySelector('.btn-server-select');
    if (openServerButton) {
      openServerButton.click();
      await new Promise(resolve => setTimeout(resolve, 2000)); // Animasyon ve listenin yüklenmesi için bekle
    } else {
      console.error("Sunucu seçme butonu bulunamadı.");
      return;
    }

    // 2. Arama yapmadan doğrudan çıkan sunucuları bul
    const serverListContainer = document.querySelector('.server-hosts .server-hosts-list ul');
    if (!serverListContainer) {
      console.error("Sunucu listesi kapsayıcısı bulunamadı.");
      return;
    }
    let serverItems = serverListContainer.querySelectorAll('li');

    console.log(`Bulunan ilk sunucu sayısı: ${serverItems.length}`);

    for (let i = 0; i < serverItems.length; i++) {
      const serverItem = serverItems[i];
      const serverNameElement = serverItem.querySelector('.host-location');
      const serverName = serverNameElement ? serverNameElement.textContent.trim() : `Bilinmeyen Sunucu ${i + 1}`;
      console.log(`Test ediliyor: ${serverName}`);

      // 3. Sunucuyu seç
      const selectButton = serverItem.querySelector('a');
      if (selectButton) {
        selectButton.click();
        await new Promise(resolve => setTimeout(resolve, 1000)); // Seçim sonrası bekleme
      } else {
        console.warn(`${serverName} için seçme butonu bulunamadı.`);
        continue;
      }

      // 4. Testi başlat
      const startButton = document.querySelector('.js-start-test');
      if (startButton) {
        startButton.click();
        console.log(`${serverName} için test başlatıldı.`);

        // Testin bitmesini bekle
        await waitForTestCompletion();
        console.log(`${serverName} için test tamamlandı.`);

        // 5. Anketi kontrol et ve tıkla (tek yıldız)
        await new Promise(resolve => setTimeout(resolve, 2000)); // Test bittikten sonra anketin görünmesi için biraz daha bekle

        const surveyContainer = document.querySelector('.audience-survey-answers');
        if (surveyContainer) {
          const firstStar = surveyContainer.querySelector('li:first-child a');
          if (firstStar) {
            firstStar.click();
            console.log("Anket (tek yıldız) yanıtlandı.");
            await new Promise(resolve => setTimeout(resolve, 1000)); // Anket sonrası bekleme
          } else {
            console.warn("Anket cevabı (tek yıldız) bulunamadı.");
          }
        } else {
          console.log("Anket alanı bulunamadı.");
        }

        // Son sunucu değilse, bir sonraki sunucuyu test etmek için sunucu seçimini tekrar aç
        if (i < serverItems.length - 1) {
          const reOpenServerButton = document.querySelector('.btn-server-select');
          if (reOpenServerButton) {
            reOpenServerButton.click();
            await new Promise(resolve => setTimeout(resolve, 2000)); // Açılma ve listenin yüklenmesi için bekle

            // Sunucu listesini tekrar bul (yeni liste yüklenmiş olabilir)
            const updatedServerListContainer = document.querySelector('.server-hosts .server-hosts-list ul');
            if (updatedServerListContainer) {
              serverItems = updatedServerListContainer.querySelectorAll('li');
            } else {
              console.warn("Güncellenmiş sunucu listesi bulunamadı.");
              break; // Liste bulunamazsa döngüyü sonlandır
            }
          }
        }
      } else {
        console.error("Test başlatma butonu bulunamadı.");
        return;
      }
    }

    console.log("Tüm ilk sunucular test edildi.");

  } catch (error) {
    console.error("Bir hata oluştu:", error);
  }
}

// Testin bitmesini bekleyen basit bir fonksiyon
async function waitForTestCompletion() {
  return new Promise(resolve => {
    console.log("Testin bitmesi bekleniyor...");
    setTimeout(resolve, 45000); // Örnek olarak 45 saniye bekleniyor.
  });
}

testAllInitialServers();
